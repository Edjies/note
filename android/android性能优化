android性能优化包括三个方面： UI优化， 内存优化， 网络优化 和其它等
  对UI的优化主要体现在app使用的流畅程度上。一个流畅的app的每一帧的运行时间应该不超过16ms, 即最佳的帧率为60fps.有几个方面可以影响app使用的流畅程度：
	一是 布局的嵌套程度
	二是 过度绘制
	三是 过度测量
	四是 一些逻辑操作阻塞UI线程
  有几个工具可以对UI性能进行分析

  提高UI性能的几个技巧
	一是用颜色代替图片， 用ShapeDrawable 代替一些规则图形， 用 .9图代替普通图，


  内存优化
  android里面一个很大的问题便是 OOM 内存溢出问题， 一个app所能申请的内存是有限的， 所以当需要的内存超过上限之后，便会发生内存溢出。下面是会造成内存溢出的一些原因：
    
  一个是内存泄露  程序在申请内存之后，无法释放已申请的内存空间。 在android中就是 一些对象没有使用价值了， 但是无法被GC回收。
  		 android里面常见的内存泄露：
			一是广播注册没有解绑
			二是
  二是占用资源较大的对象过多并且没有即时释放
	图片， 线程等。

  三是产生过多的垃圾对象


  常见的几个内存分析工具

  解决OOM的几个技巧
	一是背景和图片：
		一是用颜色代替图片， 用ShapeDrawable 代替一些规则图形， 用 .9图代替普通图， 图片加载，资源释放， 使用软引用
	二是线程：
		最好使用线程池
	三是String：
		字符串拼接 使用 StringBuilder 或 StringBuffer(线程安全)
	四是慎用static对象

内存管理原则：
	图片加载： 纯色 > ShapeDrawable > .9 > 普通图片， 需要缓存图片时使用软引用， Bitmap使用完毕最好释放，  对图片进行采样节约内存
	Context: 广播注册， thread的使用， 静态变量等
	...


网络处理原则：
	1. 没有网络时，跳过网络处理步骤
	2. 避免重复的网络请求
	3. 区别对待wifi 和 流量
	4. 每个网络请求都有一个 超时处理
	5. 网络请求成功后 的 Context判断
	6. 如果有网络的定时刷新， 请在正确的时机进行

	Volley框架的优点


	
	
		