Android中造成内存泄露的几种方式？
	内存泄露是一些无用对象无法被系统回收造成的。 内存泄露造成的原因有几种：
	
	一是由于静态对象造成的内存泄露。
	    例如： 一个静态对象有对 Activity的引用，  那么会造成Activity对象无法被系统回收。 像静态的View等。

	二是由于非静态内部类造成的内存泄露
	    非静态内部类 隐式的含有对外部类实例的引用。而静态内部类则没有对外部类实例的引用。
	    
	    在Handler中， 若handler以非静态内部类的形式实现， 当Activity被销毁后，若消息队列中仍存在消息， message包含handler的引用， handler包含对Activity的引用（内部类的隐式引用）。 造成Activity无法被回收。
	    包括AsyncTask等都要避免内部类对象的生存周期比外部对象的长。

	    同样的例子存在于 Thread， TimerTask， AsyncTask等 非静态内部类中。 由于 DVM会保存所有的线程引用。 因此， 若线程中存在对Activity的隐式引用，则 Activity也不会被回收。

	    对于这种问题的解决办法是 使用静态内部类 代替 非静态内部类。


	    
	    

        

        

	
	   